#include<iostream> //pawee
#include<string>
#include<time.h>
#include<iomanip>
using namespace std;
struct Data
{
	int id;
	string name;
	float score1; //can be array score[3]
	float score2;
	float score3;
	float total;
	float average[4]; // index 0 = score1, index 1 = score,2 ..... index 3 = total
};
void getdata(Data Rec[], int Max);
void sortdata(Data Rec[], int Max);
void average(Data Rec[], int Max);
void displaydata(Data Rec[], int Max);
string RandomString(int ch);
int main()
{
	const int Max = 20;
	Data Rec[Max];
	srand(time(0));
	getdata(Rec, Max);
	sortdata(Rec, Max);
	average(Rec, Max);
	displaydata(Rec, Max);
}
void displaydata(Data Rec[],int Max)
{
	cout << fixed << setprecision(2);
	string line(83, '=');
	cout << line << endl;
	cout << " No." << setw(8) << "Id" << setw(10) << "Name";
	cout << setw(20) << "Test1" << setw(12) << "Test2";
	cout << setw(12) << "Test3" << setw(18) << "Total(100%)\n";
	cout << line << endl;
	for (int i = 0; i < Max; i++)
	{
		cout << setw(3) << i + 1 << setw(10);
		cout << right << Rec[i].id << "    " << setw(5) << Rec[i].name << setw(18);
		cout << right << Rec[i].score1 << setw(12) << Rec[i].score2 << setw(12);
		cout << Rec[i].score3 << setw(12) << Rec[i].total << endl;
	}
	cout << line << endl;
	cout << "  Average of mark " << setw(24);
	for (int i = 0; i < 4; i++)
	{
		cout << Rec[0].average[i] << setw(12);
	}
	cout << endl;
}

void average(Data Rec[],int Max)
{
	for (int j = 0; j < 4; j++)
	{
			Rec[0].average[j] = 0;
	}
	for (int i = 0; i < Max; i++)
	{
		Rec[0].average[0] += Rec[i].score1;
	}
	for (int i = 0; i < Max; i++)
	{
		Rec[0].average[1] += Rec[i].score2;
	}
	for (int i = 0; i < Max; i++)
	{
		Rec[0].average[2] += Rec[i].score3;
	}
	for (int i = 0; i < Max; i++)
	{
		Rec[0].average[3] += Rec[i].total;
	}
	for (int i = 0; i < 4; i++)
	{
		Rec[0].average[i] /= Max;
	}
}

void sortdata(Data Rec[], int Max)
{
	string strtemp; //bubble sort
	int i, j, temp;
	for (i = 0; i < Max; i++)
	{
		for (j = i + 1; j < Max; j++)
		{
			if (Rec[j].total > Rec[i].total) //if ji use array here 
			{
				temp = Rec[i].id; // it would be very short
				Rec[i].id = Rec[j].id;
				Rec[j].id = temp;
				strtemp = Rec[i].name;
				Rec[i].name = Rec[j].name;
				Rec[j].name = strtemp;
				temp = Rec[i].total;
				Rec[i].total = Rec[j].total;
				Rec[j].total = temp;
				temp = Rec[i].score1;
				Rec[i].score1 = Rec[j].score1;
				Rec[j].score1 = temp;
				temp = Rec[i].score2;
				Rec[i].score2 = Rec[j].score2;
				Rec[j].score2 = temp;
				temp = Rec[i].score3;
				Rec[i].score3 = Rec[j].score3;
				Rec[j].score3 = temp;
			}
		}
	}

}

void getdata(Data Rec[],int Max)
{
	for (int i = 0; i < Max; i++)
	{

		Rec[i].id = rand() % 9000 + 1000; // all of this can be cin >>
		Rec[i].name = RandomString(7);
		Rec[i].score1 = rand() % 25 + 1;
		Rec[i].score2 = rand() % 25 + 1;
		Rec[i].score3 = rand() % 50 + 1;
		Rec[i].total = Rec[i].score1 + Rec[i].score2 + Rec[i].score3;
	}
}

string RandomString(int ch)
{
	//random 7 letters for name
	char alpha[26] = { 'a', 'b', 'c', 'd', 'e', 'f', 'g',
						  'h', 'i', 'j', 'k', 'l', 'm', 'n',
						  'o', 'p', 'q', 'r', 's', 't', 'u',
						  'v', 'w', 'x', 'y', 'z' };
	string result = "";
	for (int i = 0; i < ch; i++)
		result = result + alpha[rand() % 26];
	return result;
}


